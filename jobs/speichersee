#!/usr/bin/env bash

set -e

DEBUG=${DEBUG:-''}
[ -n "${DEBUG}" ] && set -x

# set BASE_PATH
BASE_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && cd .. && pwd)"

# lockfile and traps
JOBNAME='speichersee'
source ${BASE_PATH}/inc/header

#config
SRC='/mnt/data.disk/speichersee/'
DST_SNAP='/mnt/data.disk/speichersee.snapshots/'
DST_SEND='/mnt/backups.disk/speichersee.snapshots/'
DST_REMOTE='speichersee@192.168.187.11:/mnt/backups.disk/speichersee/'
DST_REMOTE_BACKUPDIR='/mnt/backups.disk/speichersee.backups/'
VPN_CONF='hhs'

# gets $JOBNAME
# sets $JOBTYPE
source ${BASE_PATH}/inc/jobtype

# gets $JOBTYPE
# sets $KEEPDAYS
source ${BASE_PATH}/inc/keepdays

#################################################

# create snapshot
${BASE_PATH}/bin/snapshot-create "${SRC}" "${DST_SNAP}" "${JOBTYPE}"

# cleanup snapshots
${BASE_PATH}/bin/snapshot-cleanup "${DST_SNAP}" "${JOBTYPE}" "${KEEPDAYS}"

# run local backups, if not hourly
if [[ -n "${FORCE_LOCAL}" || ${JOBTYPE} != 'hourly' ]]
then
  ${BASE_PATH}/bin/retry-local ${JOBTYPE} ${SRC} ${DST_SNAP} ${DST_SEND}
fi

# run remote backups, if not hourly
if [[ -n "${FORCE_REMOTE}" || ${JOBTYPE} != 'hourly' ]]
then
  ${BASE_PATH}/bin/retry-remote ${JOBTYPE} ${SRC} ${DST_REMOTE} ${DST_REMOTE_BACKUPDIR} ${VPN_CONF}
fi
