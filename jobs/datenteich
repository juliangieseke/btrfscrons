#!/usr/bin/env bash

# set SCRIPT_PATH
SCRIPT_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && pwd)"

# lockfile and traps
JOBNAME='datenteich'
source ${SCRIPT_PATH}/inc/header

#config
SRC='/mnt/data.disk/datenteich/'
DST_SNAP='/mnt/data.disk/datenteich.snapshots/'
DST_SEND='/mnt/backups.disk/datenteich.snapshots/'
DST_REMOTE='datenteich@192.168.152.11:/mnt/backups.disk/datenteich/'
DST_REMOTE_BACKUPDIR='/mnt/backups.disk/datenteich.backups/'
VPN_CONF='bms'

# gets $JOBNAME
# sets $JOBTYPE
source ${SCRIPT_PATH}/inc/jobtype

# gets $JOBTYPE
# sets $KEEPDAYS
source ${SCRIPT_PATH}/inc/keepdays

#################################################

# create snapshot
${SCRIPT_PATH}/bin/snapshot-create ${SRC} ${DST_SNAP} ${JOBTYPE}

# cleanup snapshots
${SCRIPT_PATH}/bin/snapshot-cleanup ${DST_SNAP} ${JOBTYPE} ${KEEPDAYS}

# run local backups, if not hourly
[ ${JOBTYPE} != 'hourly' ] && ${SCRIPT_PATH}/bin/retry-local ${JOBTYPE} ${SRC} ${DST_SNAP} ${DST_SEND}

# run remote backups, if not hourly
[[ -n "${FORCE_REMOTE}" || ${JOBTYPE} != 'hourly' ]] && ${SCRIPT_PATH}/bin/retry-remote ${JOBTYPE} ${SRC} ${DST_REMOTE} ${DST_REMOTE_BACKUPDIR} ${VPN_CONF}

#################################################

echo "âœ… Successfully completed after $(displaytime ${SECONDS})."
