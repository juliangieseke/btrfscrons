#!/usr/bin/env bash

set -e

#################################################
# debug stuff
DEBUG=${DEBUG:-''}
VERBOSE=${VERBOSE:-''}
[ -n "${DEBUG}" ] && set -x


#################################################
# cronname, required, has to match file in crons folder
# defines the file to include 
CRONNAME=${CRONNAME:-''}
[ -n "${1}" ] && CRONNAME=${1}


#################################################
# set SCRIPT_PATH
SCRIPT_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && pwd)"


#################################################
# setup logs
LOGFILE="${SCRIPT_PATH}/cron.log"
LOGPREFIX="${CRONNAME} %H:%M:%S"

# this saves everything to logfile and prints stderr to screen. that way cron sends an email only if something failed.
# ref https://stackoverflow.com/a/19279694
if [ -n "${DEBUG}" ] || [ -n "${VERBOSE}" ]; then
  exec > >(ts "${LOGPREFIX}" | tee -a ${LOGFILE}) 2> >(ts "${LOGPREFIX}" | tee -a ${LOGFILE} >&2)
else
  exec 3>&2
  exec > >(ts "${LOGPREFIX}" | tee -a ${LOGFILE} >/dev/null) 2> >(ts "${LOGPREFIX}" | tee -a ${LOGFILE} >&3)
fi


#################################################
# setup lockfile & trap
lockfile -60 -r50  "${SCRIPT_PATH}/${CRONNAME}.lock"
trap "rm -f \"${SCRIPT_PATH}/${CRONNAME}.lock\"" EXIT


#################################################
# include host specific part, if it exists
source "${SCRIPT_PATH}/crons/${CRONNAME}"


#################################################
# done.