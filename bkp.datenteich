#!/usr/bin/env bash

set -e

DEBUG=${DEBUG:-''}
[ -n "${DEBUG}" ] && set -x

# set SCRIPT_PATH
SCRIPT_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && pwd)"

#config
CRONNAME='datenteich'
SRC='/mnt/data.disk/datenteich/'
DST_SNAP='/mnt/data.disk/datenteich.snapshots/'
DST_SEND='/mnt/backups.disk/datenteich.snapshots/'
DST_REMOTE='datenteich@192.168.152.11:/mnt/backups.disk/datenteich/'
DST_REMOTE_BACKUPDIR='/mnt/backups.disk/datenteich.backups/'
VPN_CONF='bms'


lockfile -600 -r5  "${SCRIPT_PATH}/bkp.${CRONNAME}.lock"
trap '[ $? -ne 0 ] && echo "‚ùå Stopped with errors."; rm -f "${SCRIPT_PATH}/bkp.${CRONNAME}.lock"; trap - EXIT' EXIT SIGINT
echo -e "\nüöõ Starting '${CRONNAME}' ($(date))"

# gets $CRONNAME
# sets $CRONTYPE
source ${SCRIPT_PATH}/inc/crontype

# gets $CRONTYPE
# sets $KEEPDAYS
source ${SCRIPT_PATH}/inc/keepdays


# create snapshot
${SCRIPT_PATH}/bin/snapshot-create ${SRC} ${DST_SNAP} ${CRONTYPE}

# cleanup snapshots
${SCRIPT_PATH}/bin/snapshot-cleanup ${DST_SNAP} ${CRONTYPE} ${KEEPDAYS}

# run backups, if not hourly
[ ${CRONTYPE} != 'hourly' ] && ${SCRIPT_PATH}/bin/backup ${CRONTYPE} ${SRC} ${DST_SNAP} ${DST_SEND} ${DST_REMOTE} ${DST_REMOTE_BACKUPDIR} ${VPN_CONF}


# print stats
source ${SCRIPT_PATH}/inc/footer