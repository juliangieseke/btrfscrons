#!/usr/bin/env bash

set -e

DEBUG=${DEBUG:-''}
[ -n "${DEBUG}" ] && set -x

# set base_path
base_path="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && cd .. && pwd)"

src_path=${1:-''}
dst_path=${2:-''}
snapshot_parent=''


# exit trap
function teardown {
  trap - EXIT
  
  # if ! systemctl is-active netatalk > /dev/null
  # then
  #   systemctl start netatalk && echo "Started netatalk."
  # fi

  flock --unlock 200
}

exec 200>${base_path}/lock/backup-snapshots.lock
flock -n 200 || exit 7
echo $$ 1>&200

trap teardown EXIT SIGINT

# # TM keeps connection open, this doesnt work :(
# while [ $(lsof | grep /mnt/timemachine | wc -l) -ne 0 ]
# do
#   echo "Time Machine running, waitingâ€¦" 1>&2
#   sleep 60
# done

# stop netatalk to prevent tm backups during btrfs send | btrfs receive
# systemctl stop netatalk && echo "Stopped netatalk."

# sync (new) snapshots to dst_path
find ${src_path%/}/ -mindepth 1 -maxdepth 1 -type d | while read snapshot_pathname
do
  snapshot_basename="$(basename ${snapshot_pathname})"
  if [ ! -d "${dst_path%/}/${snapshot_basename}" ]
  then
    if [ -n "${snapshot_parent}" ]
    then
      echo "Sending incremental snapshot '${snapshot_basename}' with parent '${snapshot_parent}'."
      btrfs send -p "${src_path%/}/${snapshot_parent}" "${src_path%/}/${snapshot_basename}" | btrfs receive "${dst_path%/}/" \
        || {
          echo "ERROR: btrfs receive failed, trying to clean up" 1>&2
          [ -d ${dst_path%/}/${snapshot_basename} ] && ${base_path}/bin/snapshot-delete "${dst_path%/}/${snapshot_basename}" \
            || [ -d ${dst_path%/}/${snapshot_parent} ] &&  ${base_path}/bin/snapshot-delete "${dst_path%/}/${snapshot_parent}"
          exit 1
        }
    else
      echo "Sending initial snapshot '${snapshot_basename}'."
      btrfs send "${src_path%/}/${snapshot_basename}" | btrfs receive "${dst_path%/}/" \
        || {
          echo "ERROR: btrfs receive failed, trying to clean up"
          [ -d ${dst_path%/}/${snapshot_basename} ] && ${base_path}/bin/snapshot-delete "${dst_path%/}/${snapshot_basename}"
          exit 1
        }
    fi
    echo "Verifying sent snapshot"
    if [ -z "$(btrfs subvolume show "${dst_path%/}/${snapshot_basename}" | grep readonly)" ]
    then
      echo "ERROR: Sent snapshot is not readonly, deleting it" 1>&2
      ${base_path}/bin/snapshot-delete "${dst_path%/}/${snapshot_basename}"
    fi
  fi
  snapshot_parent=${snapshot_basename}
done

# now delete old snapshots from dst_path
# find ${dst_path%/}/ -mindepth 1 -maxdepth 1 -type d | while read snapshot_pathname
# do
#   snapshot_basename="$(basename ${snapshot_pathname})"
#   if [ ! -d "${src_path%/}/${snapshot_basename}" ]
#   then
#     ${base_path}/bin/snapshot-delete "${dst_path%/}/${snapshot_basename}"
#   fi
# done
